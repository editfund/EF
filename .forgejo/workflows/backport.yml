# Copyright 2024 The Forgejo Authors
# SPDX-License-Identifier: MIT
#
name: issue-labels

on:
  pull_request_target:
    types:
      - closed
      - labeled

jobs:
  backporting:
    if: >
      vars.ROLE == 'forgejo-coding' &&

      secrets.BACKPORT_TOKEN != '' &&

      github.event_name == 'pull_request_target' &&
      (
        github.event.pull_request.merged &&
        contains(toJSON(github.event.pull_request.labels), 'backport/v')
      )
    runs-on: docker
    container:
      image: 'docker.io/node:20-bookworm'
    steps:
      - name: Debug info
        run: |
          cat <<'EOF'
          ${{ toJSON(github) }}
          EOF
      - name: Fetch labels
        id: fetch-labels
        shell: bash
        run: |
          set -x
          echo "Labels retrieved below"
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -qq
          apt-get -q install -qq -y jq
          filtered_labels=$(echo "$LABELS" | jq -c 'map(select(.name | startswith("backport/v")))')
          echo "FILTERED_LABELS=${filtered_labels}" >> $GITHUB_ENV
        env:
          LABELS: ${{ toJSON(github.event.pull_request.labels) }}
      - name: Extract targets
        id: extract-targets
        shell: bash
        run: |
          set -x
          targets="$(echo $FILTERED_LABELS | jq -c '[.[] | .name | sub("backport/"; "")]')"
          echo "targets=$(echo $targets)" >> $GITHUB_OUTPUT

      - name: Printing info
        shell: bash
        run: |
          echo "targets: ${{ steps.extract-targets.outputs.targets }}"
          echo "target-branch: ${{ fromJSON(steps.extract-targets.outputs.targets)[0] }}"
          echo "pull-request: ${{ github.event.pull_request.url }}"

      - uses: https://code.forgejo.org/actions/git-backporting@v4.6.0
        with:
          target-branch: ${{ fromJSON(steps.extract-targets.outputs.targets)[0] }}/forgejo
          strategy: ort
          strategy-option: find-renames
          no-squash: true
          auth: ${{ secrets.BACKPORT_TOKEN }}
          pull-request: ${{ github.event.pull_request.url }}
